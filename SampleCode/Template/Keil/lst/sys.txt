; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\sys.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\sys.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\Nano103\Include -I..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\sys.crf ..\..\..\Library\StdDriver\src\sys.c]
                          THUMB

                          AREA ||i.SYS_ClearResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_ClearResetSrc PROC
;;;39       */
;;;40     void SYS_ClearResetSrc(uint32_t u32Src)
000000  2105              MOVS     r1,#5
;;;41     {
;;;42         SYS->RSTSTS |= u32Src;
000002  0709              LSLS     r1,r1,#28
000004  684a              LDR      r2,[r1,#4]
000006  4302              ORRS     r2,r2,r0
000008  604a              STR      r2,[r1,#4]
;;;43     }
00000a  4770              BX       lr
;;;44     
                          ENDP


                          AREA ||i.SYS_DisableBOD||, CODE, READONLY, ALIGN=2

                  SYS_DisableBOD PROC
;;;174      */
;;;175    void SYS_DisableBOD(void)
000000  4802              LDR      r0,|L2.12|
;;;176    {
;;;177        SYS->BODCTL = SYS->BODCTL & ~(SYS_BODCTL_BODEN_Msk);
000002  6a41              LDR      r1,[r0,#0x24]
000004  0849              LSRS     r1,r1,#1
000006  0049              LSLS     r1,r1,#1
000008  6241              STR      r1,[r0,#0x24]
;;;178    }
00000a  4770              BX       lr
;;;179    
                          ENDP

                  |L2.12|
                          DCD      0x50000040

                          AREA ||i.SYS_DisableHIRC0Trim||, CODE, READONLY, ALIGN=2

                  SYS_DisableHIRC0Trim PROC
;;;230      */
;;;231    void SYS_DisableHIRC0Trim(void)
000000  4901              LDR      r1,|L3.8|
;;;232    {
;;;233        SYS->IRC0TCTL = 0;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;234    }
000006  4770              BX       lr
;;;235    
                          ENDP

                  |L3.8|
                          DCD      0x50000080

                          AREA ||i.SYS_DisableHIRC1Trim||, CODE, READONLY, ALIGN=2

                  SYS_DisableHIRC1Trim PROC
;;;256      */
;;;257    void SYS_DisableHIRC1Trim(void)
000000  4901              LDR      r1,|L4.8|
;;;258    {
;;;259        SYS->IRC1TCTL = 0;
000002  2000              MOVS     r0,#0
000004  6108              STR      r0,[r1,#0x10]
;;;260    }
000006  4770              BX       lr
;;;261    
                          ENDP

                  |L4.8|
                          DCD      0x50000080

                          AREA ||i.SYS_DisableLPBOD||, CODE, READONLY, ALIGN=2

                  SYS_DisableLPBOD PROC
;;;201      */
;;;202    void SYS_DisableLPBOD(void)
000000  4803              LDR      r0,|L5.16|
;;;203    {
;;;204        SYS->BODCTL = SYS->BODCTL & ~(SYS_BODCTL_LPBODEN_Msk);
000002  6a41              LDR      r1,[r0,#0x24]
000004  22ff              MOVS     r2,#0xff
000006  3201              ADDS     r2,#1
000008  4391              BICS     r1,r1,r2
00000a  6241              STR      r1,[r0,#0x24]
;;;205    }
00000c  4770              BX       lr
;;;206    
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      0x50000040

                          AREA ||i.SYS_DisableMIRCTrim||, CODE, READONLY, ALIGN=2

                  SYS_DisableMIRCTrim PROC
;;;282      */
;;;283    void SYS_DisableMIRCTrim(void)
000000  4901              LDR      r1,|L6.8|
;;;284    {
;;;285        SYS->MIRCTCTL = 0;
000002  2000              MOVS     r0,#0
000004  6208              STR      r0,[r1,#0x20]
;;;286    }
000006  4770              BX       lr
;;;287    
                          ENDP

                  |L6.8|
                          DCD      0x50000080

                          AREA ||i.SYS_EnableBOD||, CODE, READONLY, ALIGN=2

                  SYS_EnableBOD PROC
;;;164      */
;;;165    void SYS_EnableBOD(int32_t i32Mode, uint32_t u32BODLevel)
000000  4a04              LDR      r2,|L7.20|
;;;166    {
;;;167        SYS->BODCTL = (SYS->BODCTL & ~0xFFFF) | SYS_BODCTL_BODEN_Msk | (i32Mode | u32BODLevel);
000002  6a53              LDR      r3,[r2,#0x24]
000004  4308              ORRS     r0,r0,r1
000006  0c1b              LSRS     r3,r3,#16
000008  041b              LSLS     r3,r3,#16
00000a  4303              ORRS     r3,r3,r0
00000c  2001              MOVS     r0,#1
00000e  4303              ORRS     r3,r3,r0
000010  6253              STR      r3,[r2,#0x24]
;;;168    }
000012  4770              BX       lr
;;;169    
                          ENDP

                  |L7.20|
                          DCD      0x50000040

                          AREA ||i.SYS_EnableHIRC0Trim||, CODE, READONLY, ALIGN=2

                  SYS_EnableHIRC0Trim PROC
;;;219      */
;;;220    void SYS_EnableHIRC0Trim(uint32_t u32TrimSel,uint32_t u32TrimEnInt)
000000  b510              PUSH     {r4,lr}
;;;221    {
;;;222        SYS->IRC0TIEN = (SYS->IRC0TIEN & ~(SYS_IRC0TIEN_TFAILIEN_Msk | SYS_IRC0TIEN_CLKEIEN_Msk)) | u32TrimEnInt;
000002  4a06              LDR      r2,|L8.28|
000004  6853              LDR      r3,[r2,#4]
000006  2406              MOVS     r4,#6
000008  43a3              BICS     r3,r3,r4
00000a  430b              ORRS     r3,r3,r1
00000c  6053              STR      r3,[r2,#4]
;;;223        SYS->IRC0TCTL = (SYS->IRC0TCTL & ~SYS_IRC0TCTL_FREQSEL_Msk)|u32TrimSel;
00000e  6811              LDR      r1,[r2,#0]
000010  08c9              LSRS     r1,r1,#3
000012  00c9              LSLS     r1,r1,#3
000014  4301              ORRS     r1,r1,r0
000016  6011              STR      r1,[r2,#0]
;;;224    }
000018  bd10              POP      {r4,pc}
;;;225    
                          ENDP

00001a  0000              DCW      0x0000
                  |L8.28|
                          DCD      0x50000080

                          AREA ||i.SYS_EnableHIRC1Trim||, CODE, READONLY, ALIGN=2

                  SYS_EnableHIRC1Trim PROC
;;;245      */
;;;246    void SYS_EnableHIRC1Trim(uint32_t u32TrimSel,uint32_t u32TrimEnInt)
000000  b510              PUSH     {r4,lr}
;;;247    {
;;;248        SYS->IRC1TIEN = (SYS->IRC1TIEN & ~(SYS_IRC1TIEN_TFAILIEN_Msk | SYS_IRC1TIEN_CLKEIEN_Msk)) | u32TrimEnInt;
000002  4a06              LDR      r2,|L9.28|
000004  6953              LDR      r3,[r2,#0x14]
000006  2406              MOVS     r4,#6
000008  43a3              BICS     r3,r3,r4
00000a  430b              ORRS     r3,r3,r1
00000c  6153              STR      r3,[r2,#0x14]
;;;249        SYS->IRC1TCTL = (SYS->IRC1TCTL & ~SYS_IRC1TCTL_FREQSEL_Msk)|u32TrimSel;
00000e  6911              LDR      r1,[r2,#0x10]
000010  0889              LSRS     r1,r1,#2
000012  0089              LSLS     r1,r1,#2
000014  4301              ORRS     r1,r1,r0
000016  6111              STR      r1,[r2,#0x10]
;;;250    }
000018  bd10              POP      {r4,pc}
;;;251    
                          ENDP

00001a  0000              DCW      0x0000
                  |L9.28|
                          DCD      0x50000080

                          AREA ||i.SYS_EnableLPBOD||, CODE, READONLY, ALIGN=2

                  SYS_EnableLPBOD PROC
;;;191      */
;;;192    void SYS_EnableLPBOD(int32_t i32Mode, uint32_t u32BODLevel)
000000  4a05              LDR      r2,|L10.24|
;;;193    {
;;;194        SYS->BODCTL = (SYS->BODCTL & ~0xFFFF) | SYS_BODCTL_LPBODEN_Msk | (i32Mode | u32BODLevel);
000002  6a53              LDR      r3,[r2,#0x24]
000004  4308              ORRS     r0,r0,r1
000006  0c1b              LSRS     r3,r3,#16
000008  041b              LSLS     r3,r3,#16
00000a  4303              ORRS     r3,r3,r0
00000c  20ff              MOVS     r0,#0xff
00000e  3001              ADDS     r0,#1
000010  4303              ORRS     r3,r3,r0
000012  6253              STR      r3,[r2,#0x24]
;;;195    }
000014  4770              BX       lr
;;;196    
                          ENDP

000016  0000              DCW      0x0000
                  |L10.24|
                          DCD      0x50000040

                          AREA ||i.SYS_EnableMIRCTrim||, CODE, READONLY, ALIGN=2

                  SYS_EnableMIRCTrim PROC
;;;271      */
;;;272    void SYS_EnableMIRCTrim(uint32_t u32TrimSel,uint32_t u32TrimEnInt)
000000  b510              PUSH     {r4,lr}
;;;273    {
;;;274        SYS->MIRCTIEN = (SYS->MIRCTIEN & ~(SYS_MIRCTIEN_TFAILIEN_Msk | SYS_MIRCTIEN_CLKEIEN_Msk)) | u32TrimEnInt;
000002  4a06              LDR      r2,|L11.28|
000004  6a53              LDR      r3,[r2,#0x24]
000006  2406              MOVS     r4,#6
000008  43a3              BICS     r3,r3,r4
00000a  430b              ORRS     r3,r3,r1
00000c  6253              STR      r3,[r2,#0x24]
;;;275        SYS->MIRCTCTL = (SYS->MIRCTCTL & ~SYS_MIRCTCTL_FREQSEL_Msk)|u32TrimSel;
00000e  6a11              LDR      r1,[r2,#0x20]
000010  0889              LSRS     r1,r1,#2
000012  0089              LSLS     r1,r1,#2
000014  4301              ORRS     r1,r1,r0
000016  6211              STR      r1,[r2,#0x20]
;;;276    }
000018  bd10              POP      {r4,pc}
;;;277    
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      0x50000080

                          AREA ||i.SYS_GetBODStatus||, CODE, READONLY, ALIGN=2

                  SYS_GetBODStatus PROC
;;;51       */
;;;52     uint32_t SYS_GetBODStatus(void)
000000  4802              LDR      r0,|L12.12|
;;;53     {
;;;54         return ((SYS->BODCTL & SYS_BODCTL_BODOUT_Msk) >> SYS_BODCTL_BODOUT_Pos);
000002  6a40              LDR      r0,[r0,#0x24]
000004  0640              LSLS     r0,r0,#25
000006  0fc0              LSRS     r0,r0,#31
;;;55     }
000008  4770              BX       lr
;;;56     
                          ENDP

00000a  0000              DCW      0x0000
                  |L12.12|
                          DCD      0x50000040

                          AREA ||i.SYS_GetResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_GetResetSrc PROC
;;;61       */
;;;62     uint32_t SYS_GetResetSrc(void)
000000  2005              MOVS     r0,#5
;;;63     {
;;;64         return (SYS->RSTSTS);
000002  0700              LSLS     r0,r0,#28
000004  6840              LDR      r0,[r0,#4]
;;;65     }
000006  4770              BX       lr
;;;66     
                          ENDP


                          AREA ||i.SYS_IsRegLocked||, CODE, READONLY, ALIGN=2

                  SYS_IsRegLocked PROC
;;;72       */
;;;73     uint32_t SYS_IsRegLocked(void)
000000  4802              LDR      r0,|L14.12|
;;;74     {
;;;75         return !(SYS->REGLCTL & SYS_REGLCTL_REGLCTL_Msk);
000002  6800              LDR      r0,[r0,#0]
000004  07c0              LSLS     r0,r0,#31
000006  17c0              ASRS     r0,r0,#31
000008  1c40              ADDS     r0,r0,#1
;;;76     }
00000a  4770              BX       lr
;;;77     
                          ENDP

                  |L14.12|
                          DCD      0x50000100

                          AREA ||i.SYS_ReadPDID||, CODE, READONLY, ALIGN=1

                  SYS_ReadPDID PROC
;;;82       */
;;;83     uint32_t  SYS_ReadPDID(void)
000000  2005              MOVS     r0,#5
;;;84     {
;;;85         return SYS->PDID;
000002  0700              LSLS     r0,r0,#28
000004  6800              LDR      r0,[r0,#0]
;;;86     }
000006  4770              BX       lr
;;;87     
                          ENDP


                          AREA ||i.SYS_ResetCPU||, CODE, READONLY, ALIGN=1

                  SYS_ResetCPU PROC
;;;102      */
;;;103    void SYS_ResetCPU(void)
000000  2005              MOVS     r0,#5
;;;104    {
;;;105        SYS->IPRST1 |= SYS_IPRST1_CPURST_Msk;
000002  0700              LSLS     r0,r0,#28
000004  6881              LDR      r1,[r0,#8]
000006  2202              MOVS     r2,#2
000008  4311              ORRS     r1,r1,r2
00000a  6081              STR      r1,[r0,#8]
;;;106    }
00000c  4770              BX       lr
;;;107    
                          ENDP


                          AREA ||i.SYS_ResetChip||, CODE, READONLY, ALIGN=1

                  SYS_ResetChip PROC
;;;92       */
;;;93     void SYS_ResetChip(void)
000000  2005              MOVS     r0,#5
;;;94     {
;;;95         SYS->IPRST1 |= SYS_IPRST1_CHIPRST_Msk;
000002  0700              LSLS     r0,r0,#28
000004  6881              LDR      r1,[r0,#8]
000006  2201              MOVS     r2,#1
000008  4311              ORRS     r1,r1,r2
00000a  6081              STR      r1,[r0,#8]
;;;96     }
00000c  4770              BX       lr
;;;97     
                          ENDP


                          AREA ||i.SYS_ResetModule||, CODE, READONLY, ALIGN=1

                  SYS_ResetModule PROC
;;;133      */
;;;134    void SYS_ResetModule(uint32_t u32ModuleIndex)
000000  2105              MOVS     r1,#5
;;;135    {
;;;136        *(volatile uint32_t *)((uint32_t)&(SYS->IPRST1) + (u32ModuleIndex>>24)) |= 1<<(u32ModuleIndex & 0x00ffffff);
000002  0e02              LSRS     r2,r0,#24
000004  0709              LSLS     r1,r1,#28
000006  1851              ADDS     r1,r2,r1
000008  688b              LDR      r3,[r1,#8]
00000a  2201              MOVS     r2,#1
00000c  4082              LSLS     r2,r2,r0
00000e  4313              ORRS     r3,r3,r2
000010  608b              STR      r3,[r1,#8]
;;;137        *(volatile uint32_t *)((uint32_t)&(SYS->IPRST1) + (u32ModuleIndex>>24)) &= ~(1<<(u32ModuleIndex & 0x00ffffff));
000012  6888              LDR      r0,[r1,#8]
000014  4390              BICS     r0,r0,r2
000016  6088              STR      r0,[r1,#8]
;;;138    }
000018  4770              BX       lr
;;;139    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\Library\\StdDriver\\src\\sys.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REV16|
#line 388 "..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_sys_c_962b9fbe____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REVSH|
#line 402
|__asm___5_sys_c_962b9fbe____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
